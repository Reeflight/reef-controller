{"version":3,"file":"reef-controller.js","sources":["../src/controllers/firebase-controller.js","../src/controllers/i2c-controller.js","../src/controllers/tasks-controller.js","../src/controllers/channel-controller.js","../src/controllers/reef-controller.js","../src/index.js"],"sourcesContent":["'use strict';\nimport * as firebase from \"firebase\";\nexport default class FirebaseController {\n  constructor() {\n    // Initialize Firebase\n    const config = {\n      apiKey: \"AIzaSyCxBWJTjZ822a_0bxGbTJV3F1dZoQVFo1w\",\n      authDomain: \"reeflight-fb71e.firebaseapp.com\",\n      databaseURL: \"https://reeflight-fb71e.firebaseio.com\"\n    };\n    firebase.initializeApp(config);\n    global.firebase = firebase;\n  }\n\n}\n","'use strict';\nconst I2c = require('i2c');\nexport default class {\n  constructor() {\n    let address = 0x1F; // set address to 0x0F\n    try {\n      this.setWireAddress(address);\n    } catch (e) {\n      this.wire = undefined;\n      console.warn('RPI not found on address: ' + this.address);\n    }\n  }\n  write(byte0, byte1) {\n     //console.log('writing byte', byte0, ' ', byte1);\n\n    if (this.wire)\n      this.wire.write([byte0, byte1], err => {\n\n         //console.log(\"error is \", err);\n      });\n  }\n  setWireAddress(address) {\n    console.log('set address:', address);\n    let wire = new I2c(address, {device: '/dev/i2c-1'});\n    this.wire = wire;\n  }\n}\n","'use strict';\nimport logger from 'backed-logger'; //.log .error .warn\nimport {fork} from 'child_process';\nimport path from 'path';\n\nclass Tasks {\n  constructor () {\n    this.tasks = [];\n  }\n  \n  add(task) {\n    this.runWorker(task);\n  }\n  \n  runWorker(task) {\n    const worker = fork(path.join(__dirname, 'workers/profile-worker.js'));\n    worker.on('message', ({type, data}) => {\n      if (type === 'done') {\n        \n      }\n    });\n    \n    worker.send({type: 'start', data: task});\n  }\n  \n}\n\nexport default new Tasks();\n\n","'use strict';\nimport FirebaseController from './firebase-controller.js';\nimport I2cController from './i2c-controller.js';\nimport tasksController from './tasks-controller.js'\nconst I2c = new I2cController();\n\nexport default class ChannelController extends FirebaseController {\n  constructor(channels=3) {\n    super();\n    async function gen(_this) {\n      try {\n        const udid = 'uid01';\n        const url = `users/XpsE3FKDooeYDJwkxES9JLG8BPZ2`;\n        const {lanes, profileId} = await _this.getFireData(`${url}/devices/${udid}`);\n        const profile = await _this.getFireData(`${url}/profiles/${profileId}`);\n        \n        tasksController.add({profile: profile, uid: '01'});\n        \n/*        for (let lane of lanes ) {\n          if (typeof lane === 'object') {\n            let laneIndex = lanes.indexOf(lane);\n            console.log('lane', lanes.indexOf(lane));\n            for (let channel of lane.channels) {\n              console.log('channel:', channel, channels.indexOf(channel));\n              let channelIndex = channels.indexOf(channel);\n              const data = await _this.getFireData(`${url}/devices/${udid}/lanes/${laneIndex}/channels/${channelIndex}`);\n              I2c.setWireAddress(lane);\n              I2c.write(channelIndex+1, data);\n              // firebase.database().ref(url).on('value', snapshot => {\n              //   I2c.write(channel+1, snapshot.val());\n              //   console.log(channel+1, snapshot.val());\n              // });\n            }\n          }\n        }*/\n      }\n      catch (error) {\n        throw console.error(error);\n      }\n    }\n    gen(this);\n  }\n  \n  \n  getFireData(url) {\n    return new Promise((resolve, reject) => {\n      firebase.database().ref(url).on('value', snapshot => {\n        const data = snapshot.val();\n        resolve(data);\n      });\n    });\n  }\n}\n\n","'use strict';\nimport ChannelController from './channel-controller.js'\nexport default class extends ChannelController {\n  constructor() {\n    super();\n  }\n}\n","'use strict';\nimport ReefController from './controllers/reef-controller';\n\nnew ReefController();\n"],"names":["FirebaseController","config","firebase","I2c","require","address","setWireAddress","e","wire","undefined","warn","byte0","byte1","write","err","log","device","Tasks","tasks","task","runWorker","worker","fork","path","join","__dirname","on","type","data","send","I2cController","ChannelController","channels","gen","_this","udid","url","lanes","profileId","getFireData","profile","add","uid","error","console","Promise","resolve","reject","database","ref","snapshot","val","ReefController"],"mappings":";;;;;;;;;AAEe,MAAMA,kBAAN,CAAyB;gBACxB;UAENC,SAAS;cACL,yCADK;kBAED,iCAFC;mBAGA;KAHf;4BAKA,CAAuBA,MAAvB;WACOC,QAAP,GAAkBA,UAAlB;;;;ACVJ,MAAMC,QAAMC,QAAQ,KAAR,CAAZ;AACA,oBAAe,MAAM;gBACL;QACRC,UAAU,IAAd,CADY;QAER;WACGC,cAAL,CAAoBD,OAApB;KADF,CAEE,OAAOE,CAAP,EAAU;WACLC,IAAL,GAAYC,SAAZ;cACQC,IAAR,CAAa,+BAA+B,KAAKL,OAAjD;;;QAGEM,KAAN,EAAaC,KAAb,EAAoB;QAGd,KAAKJ,IAAT,EACE,KAAKA,IAAL,CAAUK,KAAV,CAAgB,CAACF,KAAD,EAAQC,KAAR,CAAhB,EAAgCE,OAAO;KAAvC;;iBAKWT,OAAf,EAAwB;YACdU,GAAR,CAAY,cAAZ,EAA4BV,OAA5B;QACIG,OAAO,IAAIL,KAAJ,CAAQE,OAAR,EAAiB,EAACW,QAAQ,YAAT,EAAjB,CAAX;SACKR,IAAL,GAAYA,IAAZ;;;;ACnBJ,MAAMS,KAAN,CAAY;gBACK;SACRC,KAAL,GAAa,EAAb;;MAGEC,IAAJ,EAAU;SACHC,SAAL,CAAeD,IAAf;;YAGQA,IAAV,EAAgB;UACRE,SAASC,mBAAKC,KAAKC,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CAAL,CAAf;WACOC,EAAP,CAAU,SAAV,EAAqB,CAAC,EAACC,IAAD,EAAOC,IAAP,EAAD,KAAkB;UACjCD,SAAS,MAAb,EAAqB;KADvB;WAMOE,IAAP,CAAY,EAACF,MAAM,OAAP,EAAgBC,MAAMT,IAAtB,EAAZ;;;AAKJ,sBAAe,IAAIF,KAAJ,EAAf;;ACvBA,MAAMd,MAAM,IAAI2B,aAAJ,EAAZ;AAEA,AAAe,MAAMC,iBAAN,SAAgC/B,kBAAhC,CAAmD;cACpDgC,WAAS,CAArB,EAAwB;;mBAEPC,GAAf,CAAmBC,KAAnB,EAA0B;UACpB;cACIC,OAAO,OAAb;cACMC,MAAO,oCAAb;cACM,EAACC,KAAD,EAAQC,SAAR,KAAqB,MAAMJ,MAAMK,WAAN,CAAmB,GAAEH,GAAI,YAAWD,IAAK,EAAzC,CAAjC;cACMK,UAAU,MAAMN,MAAMK,WAAN,CAAmB,GAAEH,GAAI,aAAYE,SAAU,EAA/C,CAAtB;wBAEgBG,GAAhB,CAAoB,EAACD,SAASA,OAAV,EAAmBE,KAAK,IAAxB,EAApB;OANF,CA0BA,OAAOC,KAAP,EAAc;cACNC,QAAQD,KAAR,CAAcA,KAAd,CAAN;;;QAGA,IAAJ;;cAIUP,GAAZ,EAAiB;WACR,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;eAC7BC,QAAT,GAAoBC,GAApB,CAAwBb,GAAxB,EAA6BV,EAA7B,CAAgC,OAAhC,EAAyCwB,YAAY;cAC7CtB,OAAOsB,SAASC,GAAT,EAAb;gBACQvB,IAAR;OAFF;KADK,CAAP;;;;AC3CJ,qBAAe,cAAcG,iBAAd,CAAgC;gBAC/B;;;;;ACAhB,IAAIqB,cAAJ"}