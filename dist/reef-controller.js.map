{"version":3,"file":"reef-controller.js","sources":["../src/controllers/firebase-controller.js","../src/controllers/i2c-controller.js","../src/controllers/channel-controller.js","../src/controllers/reef-controller.js","../src/index.js"],"sourcesContent":["'use strict';\nimport * as firebase from \"firebase\";\nexport default class FirebaseController {\n  constructor() {\n    // Initialize Firebase\n    const config = {\n      apiKey: \"AIzaSyCxBWJTjZ822a_0bxGbTJV3F1dZoQVFo1w\",\n      authDomain: \"reeflight-fb71e.firebaseapp.com\",\n      databaseURL: \"https://reeflight-fb71e.firebaseio.com\"\n    };\n    firebase.initializeApp(config);\n    global.firebase = firebase;\n  }\n\n}\n","'use strict';\nconst I2c = require('i2c');\nexport default class {\n  constructor() {\n    let address = 0x0F; // set address to 0x0F\n    try {\n      let wire = new I2c(address, {device: '/dev/i2c-1'});\n      this.wire = wire;\n    } catch (e) {\n      this.wire = undefined;\n      console.warn('RPI not found on address: ' + this.address);\n    }\n  }\n  write(byte0, byte1) {\n     //console.log('writing byte', byte0, ' ', byte1);\n\n    if (this.wire)\n      this.wire.write([byte0, byte1], err => {\n\n         //console.log(\"error is \", err);\n      });\n  }\n}\n","'use strict';\nimport FirebaseController from './firebase-controller.js';\nimport I2cController from './i2c-controller.js';\nconst I2c = new I2cController();\n\nexport default class ChannelController extends FirebaseController {\n\n  // static get properties() {\n  //   return {\n  //     data: {\n  //\n  //     }\n  //   }\n  // }\n\n  constructor(channels=4, lanes=3) {\n    const udid = 'uid01';\n    super();\n    for (let lane = 1; lane <= lanes; lane++){\n      for (let i = 1; i <= channels; i++) {\n      let url = `users/XpsE3FKDooeYDJwkxES9JLG8BPZ2/devices/${udid}/lanes/${lane}/channels/${i}`;\n        console.log(url);\n        firebase.database().ref(url).on('value', snapshot => {\n          \n          I2c.write(i, snapshot.val());\n          console.log(i, snapshot.val());\n        });\n      }\n    }\n    \n    \n  }\n}\n\n","'use strict';\nimport ChannelController from './channel-controller.js'\nexport default class extends ChannelController {\n  constructor() {\n    super();\n  }\n}\n","'use strict';\nimport ReefController from './controllers/reef-controller';\n\nnew ReefController();\n"],"names":["FirebaseController","config","firebase","I2c","require","address","wire","device","e","undefined","warn","byte0","byte1","write","err","I2cController","ChannelController","channels","lanes","udid","lane","i","url","log","database","ref","on","snapshot","val","ReefController"],"mappings":";;;AAEe,MAAMA,kBAAN,CAAyB;gBACxB;UAENC,SAAS;cACL,yCADK;kBAED,iCAFC;mBAGA;KAHf;iBAKA,CAAuBA,MAAvB;WACOC,QAAP,GAAkBA,UAAlB;;;;ACVJ,MAAMC,QAAMC,QAAQ,KAAR,CAAZ;AACA,oBAAe,MAAM;gBACL;QACRC,UAAU,IAAd,CADY;QAER;UACEC,OAAO,IAAIH,KAAJ,CAAQE,OAAR,EAAiB,EAACE,QAAQ,YAAT,EAAjB,CAAX;WACKD,IAAL,GAAYA,IAAZ;KAFF,CAGE,OAAOE,CAAP,EAAU;WACLF,IAAL,GAAYG,SAAZ;cACQC,IAAR,CAAa,+BAA+B,KAAKL,OAAjD;;;QAGEM,KAAN,EAAaC,KAAb,EAAoB;QAGd,KAAKN,IAAT,EACE,KAAKA,IAAL,CAAUO,KAAV,CAAgB,CAACF,KAAD,EAAQC,KAAR,CAAhB,EAAgCE,OAAO;KAAvC;;;;ACdN,MAAMX,MAAM,IAAIY,aAAJ,EAAZ;AAEA,AAAe,MAAMC,iBAAN,SAAgChB,kBAAhC,CAAmD;cAUpDiB,WAAS,CAArB,EAAwBC,QAAM,CAA9B,EAAiC;UACzBC,OAAO,OAAb;;SAEK,IAAIC,OAAO,CAAhB,EAAmBA,QAAQF,KAA3B,EAAkCE,MAAlC,EAAyC;WAClC,IAAIC,IAAI,CAAb,EAAgBA,KAAKJ,QAArB,EAA+BI,GAA/B,EAAoC;YAChCC,MAAO,8CAA6CH,IAAK,UAASC,IAAK,aAAYC,CAAE,EAAzF;gBACUE,GAAR,CAAYD,GAAZ;iBACSE,QAAT,GAAoBC,GAApB,CAAwBH,GAAxB,EAA6BI,EAA7B,CAAgC,OAAhC,EAAyCC,YAAY;cAE/Cd,KAAJ,CAAUQ,CAAV,EAAaM,SAASC,GAAT,EAAb;kBACQL,GAAR,CAAYF,CAAZ,EAAeM,SAASC,GAAT,EAAf;SAHF;;;;;;ACpBR,qBAAe,cAAcZ,iBAAd,CAAgC;gBAC/B;;;;;ACAhB,IAAIa,cAAJ"}